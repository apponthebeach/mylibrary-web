<?php    namespace Library\Models;    	use \Library\Entities\Genre;	    class GenreManager_PDO extends GenreManager {		/** @{inheritDoc} */		public function getGenresList() {			$genresList = array();					$requete = $this->dao->query("SELECT											GEN_ID AS id,											GEN_LIBELLE AS libelle										FROM											GENRE										ORDER BY											GEN_LIBELLE");						while($genre = $requete->fetch(\PDO::FETCH_ASSOC)) {								$genresList[] = new Genre($genre);			}						$requete->closeCursor();						return $genresList;		}				/** @{inheritDoc} */		public function add(Genre $genre) {			$requete = $this->dao->prepare('INSERT INTO GENRE (GEN_ID, GEN_LIBELLE) VALUES(:id, :libelle)');						$requete->bindValue(':libelle', htmlspecialchars($genre->libelle()));			$requete->bindValue(':id', (int) $genre->id());						$requete->execute();						$genre->setId($this->dao->lastInsertId());		}				/** @{inheritDoc} */		public function modify(Genre $genre) {			$requete = $this->dao->prepare('UPDATE GENRE SET GEN_LIBELLE = :libelle WHERE GEN_ID = :id');						$requete->bindValue(':libelle', htmlspecialchars($genre->libelle()));			$requete->bindValue(':id', $genre->id());						$requete->execute();		}				/** @{inheritDoc} */		public function delete($id) {			try {				$requete = $this->dao->prepare("DELETE FROM GENRE WHERE GEN_ID = :id");				$requete->bindValue(':id', (int) $id, \PDO::PARAM_INT);				$requete->execute();				}			catch (\PDOException $e) {				return false;			}						return true;					}				/** @{inheritDoc} */		public function getGenreById($id) {			$requete = $this->dao->prepare("SELECT GEN_ID AS id, GEN_LIBELLE AS libelle FROM GENRE WHERE GEN_ID = :id");						$requete->bindValue(':id', (int) $id, \PDO::PARAM_INT);            $requete->execute();                        if ($genre = $requete->fetch(\PDO::FETCH_ASSOC)) {                               return new Genre($genre);            }                        return null;		}    }