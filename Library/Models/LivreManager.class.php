<?php  namespace Library\Models;		use \Library\Entities\Livre;	use \Library\Entities\Recherche;      abstract class LivreManager     extends \Library\Manager   {				public function save(Livre $livre)     {					if($livre->isValid())       {				$livre->isNew() ? $this->add($livre) : $this->modify($livre);			}			else       {				throw new \RuntimeException('Le livre doit être valide pour être enregistré');			}		}				abstract protected function getLivreList($letter);				abstract protected function add(Livre $livre);				abstract protected function modify(Livre $livre);				abstract protected function delete($id);				abstract protected function getLivreById($id);				abstract protected function hasGetLivre($livreId, $userId);				abstract protected function hasReadLivre($livreId, $userId);				abstract protected function hasWantLivre($livreId, $userId);				abstract protected function addGetLivre($livreId, $userId);				abstract protected function removeGetLivre($livreId, $userId);				abstract protected function addReadLivre($livreId, $userId);				abstract protected function removeReadLivre($livreId, $userId);				abstract protected function addWantLivre($livreId, $userId);				abstract protected function removeWantLivre($livreId, $userId);				abstract protected function getGetList($userId);				abstract protected function getWantList($userId);				abstract protected function getReadList($userId);				abstract protected function getSuggestionList($userId);        abstract protected function getAllList();				abstract protected function removeSuggestions($livreId, $userId);				abstract protected function peopleHaveLivre($livreId, $userId);				abstract protected function search(Recherche $recherche);      }