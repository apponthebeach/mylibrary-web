<?php  namespace Library\Entities;    class Auteur     extends \Library\Entity   {      const NOM_INVALIDE = 1;      const PRENOM_INVALIDE = 2;        protected $nom;        protected $prenom;           public function __construct(array $attributs = array())     {      foreach ($attributs as $attribut => $value)       {        $method = 'set'.ucfirst($attribut);                if (is_callable(array($this, $method)))         {            $this->$method($value);        }      }		    }      public function isValid()     {        return !(empty($this->nom) && empty($this->prenom));    }          // SETTERS //         public function setNom($nom)     {      if (empty($nom))       {        $this->erreurs[] = self::NOM_INVALIDE;      }      else       {        $this->nom = $nom;      }    }       public function setPrenom($prenom)     {      if (empty($prenom))       {        $this->erreurs[] = self::PRENOM_INVALIDE;      }      else       {        $this->prenom = $prenom;      }    }      // GETTERS //    public function nom()     {      return $this->nom;    }      public function prenom()    {      return $this->prenom;    }      }