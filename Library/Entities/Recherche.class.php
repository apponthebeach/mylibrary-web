<?php  namespace Library\Entities;    class Recherche     extends \Library\Entity   {        const NOM_INVALIDE = 1;        const ANNEE_INVALIDE = 2;        const GENRE_INVALIDE = 4;        const AUTEUR_INVALIDE = 5;        protected $nom;        protected $annee;         protected $genreId;         protected $auteurId;      public function __construct(array $attributs = array())     {      foreach ($attributs as $attribut => $value)       {        $method = 'set'.ucfirst($attribut);                if (is_callable(array($this, $method)))         {          $this->$method($value);        }      }		    }      public function isValid()     {      return !(empty($this->nom) && empty($this->annee) && empty($this->poche) && empty($this->genreId) && empty($this->auteurId));    }        // SETTERS //         public function setNom($nom)     {      if (empty($nom))       {        $this->erreurs[] = self::NOM_INVALIDE;      }      else       {        $this->nom = $nom;      }    }      public function setAnnee($annee)     {      if (empty($annee))       {        $this->erreurs[] = self::ANNEE_INVALIDE;      }      else       {        $this->annee = $annee;      }    }      public function setGenreId($genreId)     {      if (empty($genreId))       {        $this->erreurs[] = self::GENRE_INVALIDE;      }      else       {        $this->genreId = $genreId;      }    }      public function setAuteurId($auteurId)     {      if (empty($auteurId))       {        $this->erreurs[] = self::AUTEUR_INVALIDE;      }      else       {        $this->auteurId = $auteurId;      }    }      // GETTERS //    public function nom()     {      return $this->nom;    }      public function annee()     {      return $this->annee;    }      public function genreId()     {      return $this->genreId;    }        public function auteurId()     {      return $this->auteurId;    }      }