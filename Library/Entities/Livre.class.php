<?php    namespace Library\Entities;        class Livre extends \Library\Entity {        protected 	$nom,					$annee,					$poche,					$couverture,					$genreId,					$genreLibelle,					$auteurId,					$auteurNom,					$auteurPrenom;                const NOM_INVALIDE = 1;		const ANNEE_INVALIDE = 2;		const POCHE_INVALIDE = 3;		const GENRE_INVALIDE = 4;		const AUTEUR_INVALIDE = 5;		const PHOTO_INVALIDE = 6;        		public function __construct(array $attributs = array()) {            foreach ($attributs as $attribut => $value) {                $method = 'set'.ucfirst($attribut);                                if (is_callable(array($this, $method))) {                    $this->$method($value);                }            }		        }		        public function isValid() {            return !(empty($this->nom) && empty($this->annee) && empty($this->poche) && empty($this->genreId) && empty($this->auteurId));        }                // SETTERS //             public function setNom($nom) {            if (empty($nom)) {                $this->erreurs[] = self::NOM_INVALIDE;			}            else {                $this->nom = $nom;			}        }				public function setAnnee($annee) {            if (empty($annee)) {                $this->erreurs[] = self::ANNEE_INVALIDE;			}            else {                $this->annee = $annee;			}        }				public function setPoche($poche) {            if (empty($poche)) {                $this->erreurs[] = self::POCHE_INVALIDE;			}            else {                $this->poche = $poche;			}        }				public function setGenreId($genreId) {            if (empty($genreId)) {                $this->erreurs[] = self::GENRE_INVALIDE;			}            else {                $this->genreId = $genreId;			}        }				public function setGenreLibelle($genreLibelle) {            if (empty($genreLibelle)) {                $this->erreurs[] = self::GENRE_INVALIDE;			}            else {                $this->genreLibelle = $genreLibelle;			}        }				public function setAuteurId($auteurId) {            if (empty($auteurId)) {                $this->erreurs[] = self::AUTEUR_INVALIDE;			}            else {                $this->auteurId = $auteurId;			}        }				public function setAuteurNom($auteurNom) {            if (empty($auteurNom)) {                $this->erreurs[] = self::AUTEUR_INVALIDE;			}            else {                $this->auteurNom = $auteurNom;			}        }				public function setAuteurPrenom($auteurPrenom) {            if (empty($auteurPrenom)) {                $this->erreurs[] = self::AUTEUR_INVALIDE;			}            else {                $this->auteurPrenom = $auteurPrenom;			}        }				public function setCouverture($couverture) {            if (!is_string($couverture) || empty($couverture)) {                $this->erreurs[] = self::PHOTO_INVALIDE;			}            else {                $this->couverture = $couverture;			}        }		        // GETTERS //        public function nom() {            return $this->nom;        }				public function annee() {            return $this->annee;        }				public function poche() {            return $this->poche;        }				public function genreId() {			return $this->genreId;		}				public function genreLibelle() {			return $this->genreLibelle;		}				public function auteurId() {			return $this->auteurId;		}				public function auteurNom() {			return $this->auteurNom;		}				public function auteurPrenom() {			return $this->auteurPrenom;		}				public function couverture() {            return $this->couverture;        }    }