<?php    namespace Library;    	/**	* Classe permettant de retourner le manager du module spécifié.	*/    class Managers extends Manager {        protected $api = null;        protected $dao = null;        protected $managers = array();        		/**		* Constructeur.		* @param $api PDO		* @param $dao PDOFactory::getMysqlConnexion()		*/        public function __construct($api, $dao) {            $this->api = $api;            $this->dao = $dao;        }        		/**		* Getter du manager.		* @param $module module dont ons ouhaite récupérer le manager		* @return manager		*/        public function getManagerOf($module) {            if (!is_string($module) || empty($module)) {                throw new \InvalidArgumentException('Le module spécifié est invalide');            }                        if (!isset($this->managers[$module])) {                $manager = '\\Library\\Models\\'.$module.'Manager_'.$this->api;                $this->managers[$module] = new $manager($this->dao);            }                        return $this->managers[$module];        }    }